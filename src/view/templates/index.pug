extends ../layout/base

block contents
    .px-5.mt-1.mb-2.vstack.gap-3
        .card 
            .card-header.hstack.justify-content-between
                span displayMode: queue
            .card-body
                #ggantt-queue.ggantt

        .card 
            .card-header.hstack.justify-content-between
                span displayMode: group
            .card-body
                #ggantt-group.ggantt
        .card 
            .card-header.hstack.justify-content-between
                span displayMode: separated
            .card-body
                #ggantt-separated.ggantt

        .card
            .card-header.hstack.justify-content-between
                span Usage
            .card-body 
                span.d-block const chartObj = new gGantt.Chart(rootElement, Data, Options)

        .card
            .card-header.hstack.justify-content-between
                span Method
            .card-body 
                span.d-block chartObj.init() // initialize chart
                span.d-block chartObj.createBar(name, start timestamp, end timestamp) // return DOM element
        .card
            .card-header.hstack.justify-content-between
                span Options
            .card-body 
                span.d-block autoInitialize: true, // default: true
                span.d-block displayMode: "queue", // default: "group"
                span.d-block stackGap: 4, // default: 2
                span.d-block tickPositionBottom: true, // default: false
                span.d-block showRange: true, // default: false
                span.d-block useTooltip: true, // default: true
                span.d-block tooltipPlacement: "top", // default: bottom
                span.d-block useTimeline: true, // default: true
                span.d-block useDivider: true, // default: true

block scripts
    script(src="/static/assets/sampleData.js") 
    script.
        const queue = new gGantt.Chart(document.querySelector("#ggantt-queue"), sampleData, { displayMode: "queue", tooltipTemplate: tooltipTemplateSample });
        const group = new gGantt.Chart(document.querySelector("#ggantt-group"), sampleData);
        const separated = new gGantt.Chart(document.querySelector("#ggantt-separated"), sampleData, { displayMode: "separated" });
        console.log(queue.option.tooltipTemplate);
